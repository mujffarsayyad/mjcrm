/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentGateway as PrismaPaymentGateway } from "@prisma/client";

export class PaymentGatewayServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentGatewayCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentGateway.count(args);
  }

  async paymentGateways(
    args: Prisma.PaymentGatewayFindManyArgs
  ): Promise<PrismaPaymentGateway[]> {
    return this.prisma.paymentGateway.findMany(args);
  }
  async paymentGateway(
    args: Prisma.PaymentGatewayFindUniqueArgs
  ): Promise<PrismaPaymentGateway | null> {
    return this.prisma.paymentGateway.findUnique(args);
  }
  async createPaymentGateway(
    args: Prisma.PaymentGatewayCreateArgs
  ): Promise<PrismaPaymentGateway> {
    return this.prisma.paymentGateway.create(args);
  }
  async updatePaymentGateway(
    args: Prisma.PaymentGatewayUpdateArgs
  ): Promise<PrismaPaymentGateway> {
    return this.prisma.paymentGateway.update(args);
  }
  async deletePaymentGateway(
    args: Prisma.PaymentGatewayDeleteArgs
  ): Promise<PrismaPaymentGateway> {
    return this.prisma.paymentGateway.delete(args);
  }
}
