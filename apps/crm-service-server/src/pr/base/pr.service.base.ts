/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pr as PrismaPr } from "@prisma/client";

export class PrServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PrCountArgs, "select">): Promise<number> {
    return this.prisma.pr.count(args);
  }

  async prs(args: Prisma.PrFindManyArgs): Promise<PrismaPr[]> {
    return this.prisma.pr.findMany(args);
  }
  async pr(args: Prisma.PrFindUniqueArgs): Promise<PrismaPr | null> {
    return this.prisma.pr.findUnique(args);
  }
  async createPr(args: Prisma.PrCreateArgs): Promise<PrismaPr> {
    return this.prisma.pr.create(args);
  }
  async updatePr(args: Prisma.PrUpdateArgs): Promise<PrismaPr> {
    return this.prisma.pr.update(args);
  }
  async deletePr(args: Prisma.PrDeleteArgs): Promise<PrismaPr> {
    return this.prisma.pr.delete(args);
  }
}
