/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Support as PrismaSupport } from "@prisma/client";

export class SupportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SupportCountArgs, "select">): Promise<number> {
    return this.prisma.support.count(args);
  }

  async supports(args: Prisma.SupportFindManyArgs): Promise<PrismaSupport[]> {
    return this.prisma.support.findMany(args);
  }
  async support(
    args: Prisma.SupportFindUniqueArgs
  ): Promise<PrismaSupport | null> {
    return this.prisma.support.findUnique(args);
  }
  async createSupport(args: Prisma.SupportCreateArgs): Promise<PrismaSupport> {
    return this.prisma.support.create(args);
  }
  async updateSupport(args: Prisma.SupportUpdateArgs): Promise<PrismaSupport> {
    return this.prisma.support.update(args);
  }
  async deleteSupport(args: Prisma.SupportDeleteArgs): Promise<PrismaSupport> {
    return this.prisma.support.delete(args);
  }
}
